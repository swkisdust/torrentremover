# From https://github.com/nezhahq/agent/blob/main/.github/workflows/agent.yml

name: Build + Release

on:
  push:
    tags:
      - "v*"
    branches:
      - main
    paths-ignore:
      - ".github/workflows/build.yml"
      - ".github/workflows/test.yml"
      - "README.md"
      - ".goreleaser.yml"
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        goos: [linux, windows, darwin, freebsd]
        goarch: [amd64, arm64, 386]
        include:
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: s390x
          - goos: linux
            goarch: riscv64
          - goos: linux
            goarch: arm
          - goos: linux
            goarch: mips
            gomips: softfloat
          - goos: linux
            goarch: mipsle
            gomips: softfloat
          - goos: freebsd
            goarch: arm
        exclude:
          - goos: darwin
            goarch: 386

    name: Build artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"

      - name: Build Test
        if: github.event_name != 'push' || !contains(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOMIPS: ${{ matrix.gomips }}
        with:
          distribution: goreleaser
          version: "~> v2"
          args: build --single-target --clean --skip=validate --snapshot

      - name: Build
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOMIPS: ${{ matrix.gomips }}
        with:
          distribution: goreleaser
          version: "~> v2"
          args: build --single-target --clean --skip=validate

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: torrentremover-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            ./dist/*/*

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: build
    name: Release
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./assets
      
      - name: Fix permissions
        run: |
          chmod -R +x ./assets/*

      - name: Archive and compress binaries
        run: |
          find assets/*/*/* -type f | while read -r file; do
            dir=$(dirname "$file")
            filename=$(basename "$file")
            fileWithoutExt="${filename%.*}"
            zip -jr "$dir/$fileWithoutExt.zip" "$file"
          done

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "assets/*/*/*.zip"
          generateReleaseNotes: true

  release-docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build
    name: Release Docker images
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./assets

      - name: Fix permissions
        run: |
          chmod -R +x ./assets/*
          mkdir dist
          mv ./assets/*/*/* ./dist

      - name: Extract branch name in tag
        run: |
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            export TAG_NAME=$(echo ${GITHUB_REF#refs/heads/})
          else
            export TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})
          fi
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Log into GHCR
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker image name
        run: |
          GHCR_IMAGE_NAME=$(echo "ghcr.io/${{ github.repository_owner }}/torrentremover" | tr '[:upper:]' '[:lower:]')
          echo "GHCR_IMAGE_NAME=$GHCR_IMAGE_NAME" >> $GITHUB_OUTPUT
        id: image-name

      - name: Build Docker image And Push with tag
        if: contains(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.image-name.outputs.GHCR_IMAGE_NAME }}:latest
            ${{ steps.image-name.outputs.GHCR_IMAGE_NAME }}:${{ steps.extract_branch.outputs.tag }}

      - name: Build Docker image And Push snapshot
        if: contains(github.ref, 'refs/tags/') == false
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.image-name.outputs.GHCR_IMAGE_NAME }}:${{ steps.extract_branch.outputs.tag }}
